/** @file  simplify.ppl
 *  @brief Image color space conversion and simplification pipeline.
 *
 *  @author Meelik Kiik
 *  @date 21. October 2016
 *  @version 0.2
 */

REQUIRED_FORMAT:outputFormat(inputFormat)
CALL:FORMAT_TO_CONSTANT(outputFormat)

INCLUDE(colors.ppl)

SOURCE:SimplifyShader
{
  #version 130
  uniform sampler2D texIn;
  uniform sampler2D dYUV;

  out vec4 texOut;

  void main()
  {
    vec3 rgb = texelFetch(texIn, ivec2(gl_FragCoord.xy), 0).rgb;

    int y = int(rgb.r * 15);
    int v = int(rgb.g * 31) * 32 + int(rgb.b * 31);

    vec3 srgb = texelFetch(dYUV, ivec2(v, y), 0).rgb;

    texOut.rgb = srgb;
  }


}

SOURCE:YUV2RGBShader
{
  #version 130
  uniform sampler2D texIn;
  out vec4 texOut;

  #pragma INSERT(ColorPrimitives)

  void main()
  {
    vec3 yuv = texelFetch(texIn, ivec2(gl_FragCoord.xy), 0).rgb, rgb;
    YUVToRGB(yuv, rgb);
    texOut.rgb = rgb;
  }

}

FILTER_LAYOUT:SimplifyFilter(outputFormat, SimplifyShader)
FILTER_LAYOUT:YUV2RGBFilter(outputFormat, YUV2RGBShader)

PIPELINE_MAIN:SimplifyPipe
{
  INPUT_PORTS(texIn, dYUV)
  OUTPUT_PORTS(texOut)

  FILTER_INSTANCE:SimplifyFilter
  FILTER_INSTANCE:YUV2RGBFilter

  CONNECTION(THIS, texIn, SimplifyFilter, texIn)
  CONNECTION(THIS, dYUV, SimplifyFilter, dYUV)

  CONNECTION(SimplifyFilter, texOut, YUV2RGBFilter, texIn)
  CONNECTION(YUV2RGBFilter, texOut, THIS, texOut)
}
