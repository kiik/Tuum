

SOURCE:Fisheye
{

  vec2 fisheye() {
    vec2 p = gl_FragCoord.xy / vec2(WIDTH, HEIGHT);
    float prop = WIDTH / HEIGHT;

    vec2 m = vec2(0.5, 0.5);

    vec2 d = p - m;

    float r = sqrt(dot(d, d));

    float power = ( 2.0 * 3.141592 / (2.0 * sqrt(dot(m, m))) ) * (0.444 - 0.5);

    float bind;
    if(power > 0.0) bind = sqrt(dot(m, m));
    else {
      if(prop < 1.0) bind = m.x;
      else bind = m.y;
    }

    vec2 uv;
    if (power > 0.0) //fisheye
      uv = m + normalize(d) * tan(r * power) * bind / tan( bind * power);
    else if (power < 0.0) //antifisheye
      uv = m + normalize(d) * atan(r * -power * 10.0) * bind / atan(-power * bind * 10.0);
    else uv = p;//no effect for power = 1.0

    return uv;
  }

}
